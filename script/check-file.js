const { resolve } = require('path')
const assert = require('assert')
const htConfig = require('../ht.config')

const [ /* node bin */, /* path to this script */, fileToCheck ] = process.argv;

if (!fileToCheck) {
  throw Error('Missing file to check');
}

try {
  const { HyperFormula } = require(resolve(fileToCheck));

  // Check if the autogenerated static properties are correctly filled.
  assert(HyperFormula.version === htConfig.HT_VERSION)
  assert(HyperFormula.releaseDate === htConfig.HT_RELEASE_DATE)
  // The modules are generated at a different time, so there can be some
  // differences of up to several seconds. Here the only day we check.
  assert(HyperFormula.buildDate.split(' ')[0] === htConfig.HT_BUILD_DATE.split(' ')[0])

  const engine = HyperFormula.buildFromArray([
    ['42', '=A1 + 2']
  ], { gpuMode: 'cpu', licenseKey: 'non-commercial-and-evaluation' })

  const valueA1 = engine.getCellValue({ sheet: 0, row: 0, col: 0 })
  const valueB1 = engine.getCellValue({ sheet: 0, row: 0, col: 1 })

  // Check if the engine works.
  assert(valueA1 === 42)
  assert(valueB1 === 44)

  console.log(`Bundle check: \u001b[1;37m${fileToCheck}\u001b[0m \u001b[0;32mOK\u001b[0m`)
} catch (ex) {
  console.log(`Bundle check: \u001b[1;37m${fileToCheck}\u001b[0m \u001b[0;31mERROR\u001b[0m`)

  throw ex;
}
