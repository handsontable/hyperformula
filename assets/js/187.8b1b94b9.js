(window.webpackJsonp=window.webpackJsonp||[]).push([[187],{652:function(t,e,a){"use strict";a.r(e);var l=a(42),i=Object(l.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"types-of-operators"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#types-of-operators"}},[t._v("#")]),t._v(" Types of operators")]),t._v(" "),a("p",[t._v("The operators specify what type of actions are performed on arguments\n(operands) in the formula. HyperFormula supports the operators that\nare common in spreadsheet software. They are calculated in a\n"),a("RouterLink",{attrs:{to:"/guide/order-of-precendece.html"}},[t._v("specific order")]),t._v(" which can be altered by\nthe use of parentheses.")],1),t._v(" "),a("p",[t._v("HyperFormula supports the following operators:")]),t._v(" "),a("ul",[a("li",[t._v("Unary operators")]),t._v(" "),a("li",[t._v("Binary arithmetic operators")]),t._v(" "),a("li",[t._v("Comparison operators")]),t._v(" "),a("li",[t._v("Concatenation operator")]),t._v(" "),a("li",[t._v("Reference operators")])]),t._v(" "),a("h2",{attrs:{id:"unary-operators"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#unary-operators"}},[t._v("#")]),t._v(" Unary operators")]),t._v(" "),a("p",[t._v("The unary operators have only one argument (operand). For example,\nwhen the unary negation operation is provided with a number, it\nreturns the negative value of that number.")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[t._v("Operator")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("Meaning")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("Example")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("Description")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("-")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Unary minus")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("-a")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Returns the negative of its argument.")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("+")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Unary plus")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("+a")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Returns the positive of its argument.")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("%")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Percent")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("a%")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Calculate the percent of an argument.")])])])]),t._v(" "),a("h2",{attrs:{id:"binary-arithmetic-operators"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#binary-arithmetic-operators"}},[t._v("#")]),t._v(" Binary arithmetic operators")]),t._v(" "),a("p",[t._v("The binary arithmetic operators enable them to compute basic\nmathematical operations. They don't have to be wrapped with any\nfunctions. This table shows a basic behavior of the binary\narithmetic operators:")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[t._v("Operator")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("Meaning")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("Example")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("Description")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("+")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Addition")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("a + b")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Add the two arguments.")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("-")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Subtraction")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("a - b")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Subtract the second argument from the first argument.")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("*")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Multiplication")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("a * b")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Multiply the two arguments.")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("/")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Division")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("a / b")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Divide the first argument by the second argument.")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("^")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Exponentiation")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("a ^ b")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Raise the first argument by the power of the second argument.")])])])]),t._v(" "),a("p",[t._v("You are probably wondering where the "),a("em",[t._v("modulo")]),t._v(" operator is missing.\nIt is supported by the function "),a("code",[t._v("MOD")]),t._v(" so "),a("strong",[t._v("instead of writing a % b")]),t._v(",\nas you would do in a regular mathematical equation, you should use a\nformula like this: "),a("strong",[t._v("=MOD(a, b)")]),t._v(".")]),t._v(" "),a("h2",{attrs:{id:"comparison-operators"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#comparison-operators"}},[t._v("#")]),t._v(" Comparison operators")]),t._v(" "),a("p",[t._v("The binary relational operators, when used in a formula, return the boolean or logical values. Here are very general rules:")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[t._v("Operator")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("Meaning")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("Example")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("Description")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("=")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Equal to")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("a = b")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("True if a is equal to b.")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("<")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Less than")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("a < b")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("True if a is less than b.")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v(">")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Greater than")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("a > b")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("True if a is greater than b.")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("<=")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Less than or equal")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("a <= b")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("True if a is less than or equal to b.")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v(">=")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Greater than or equal")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("a >= b")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("True if a is greater than or equal to b.")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("<>")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Not equal to")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("a <> b")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("True if a is not equal to b.")])])])]),t._v(" "),a("h3",{attrs:{id:"type-coercion"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#type-coercion"}},[t._v("#")]),t._v(" Type coercion")]),t._v(" "),a("p",[t._v("HyperFormula does type coercion and it can have an impact on comparing,\nadding, or any other operation between "),a("strong",[t._v("values of a different type")]),t._v(".\nThe table represents some operations between different types and\ntheir results.")]),t._v(" "),a("h2",{attrs:{id:"boolean-to-int-coercion-basic-arithmetic-operations"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#boolean-to-int-coercion-basic-arithmetic-operations"}},[t._v("#")]),t._v(" Boolean to int coercion, basic arithmetic operations")]),t._v(" "),a("h3",{attrs:{id:"a-true-and-null"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#a-true-and-null"}},[t._v("#")]),t._v(" a) true and null")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[t._v("Operation")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("Result")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("true + null")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("1")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("true - null")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("1")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("true * null")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("0")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("true / null")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("#DIV/0!")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("true^null")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("1")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("+true (unary plus true)")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("true")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("-true (unary minus true)")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("-1")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("true%")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("0.01")])])])]),t._v(" "),a("h3",{attrs:{id:"b-null-and-true"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#b-null-and-true"}},[t._v("#")]),t._v(" b) null and true")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[t._v("Operation")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("Result")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("null + true")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("1")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("null - true")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("-1")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("null * true")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("0")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("null / true")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("0")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("null ^ true")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("0")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("+null (unary plus null)")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("null")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("-null (unary minus null)")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("0")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("null%")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("0")])])])]),t._v(" "),a("h3",{attrs:{id:"c-true-and-true"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#c-true-and-true"}},[t._v("#")]),t._v(" c) true and true")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[t._v("Operation")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("Result")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("true + true")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("2")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("true - true")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("0")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("true * true")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("1")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("true / true")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("1")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("true ^ true")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("1")])])])]),t._v(" "),a("h3",{attrs:{id:"d-false-and-true"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#d-false-and-true"}},[t._v("#")]),t._v(" d) false and true")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[t._v("Operation")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("Result")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("false + true")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("1")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("false - true")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("-1")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("false * true")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("0")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("false / true")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("0")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("false ^ true")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("0")])])])]),t._v(" "),a("h3",{attrs:{id:"e-true-and-false"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#e-true-and-false"}},[t._v("#")]),t._v(" e) true and false")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[t._v("Operation")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("Result")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("true + false")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("1")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("true - false")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("1")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("true * false")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("0")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("true / false")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("#DIV/0!")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("true ^ false")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("1")])])])]),t._v(" "),a("h3",{attrs:{id:"f-false-and-false"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#f-false-and-false"}},[t._v("#")]),t._v(" f) false and false")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[t._v("Operation")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("Result")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("false + false")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("0")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("false - false")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("0")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("false * false")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("0")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("false / false")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("#DIV/0!")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("false ^ false")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("1")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("+false (unary plus false)")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("false")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("-false (unary minus false)")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("0")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("false%")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("0")])])])]),t._v(" "),a("h3",{attrs:{id:"g-null-and-false"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#g-null-and-false"}},[t._v("#")]),t._v(" g) null and false")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[t._v("Operation")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("Result")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("null + false")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("0")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("null - false")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("0")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("null * false")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("0")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("null / false")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("#DIV/0!")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("null ^ false")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("1")])])])]),t._v(" "),a("h2",{attrs:{id:"order-operations-comparisons"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#order-operations-comparisons"}},[t._v("#")]),t._v(" Order operations, comparisons")]),t._v(" "),a("h3",{attrs:{id:"a-empty-string-and-null"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#a-empty-string-and-null"}},[t._v("#")]),t._v(' a) Empty string ("") and null')]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[t._v("Operation")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("Result")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v('"" > null')]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("false")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v('"" < null')]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("false")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v('"" >= null')]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("true")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v('"" <= null')]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("true")])])])]),t._v(" "),a("h3",{attrs:{id:"b-string-string-and-boolean"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#b-string-string-and-boolean"}},[t._v("#")]),t._v(' b) String ("string") and boolean')]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[t._v("Operation")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("Result")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v('"string" > false')]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("false")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v('"string" < false')]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("true")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v('"string" >= false')]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("false")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v('"string" <= false')]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("true")])])])]),t._v(" "),a("h3",{attrs:{id:"c-null-and-false"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#c-null-and-false"}},[t._v("#")]),t._v(" c) Null and false")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[t._v("Operation")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("Result")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("null > false")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("false")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("null < false")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("false")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("null >= false")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("true")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("null <= false")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("true")])])])]),t._v(" "),a("h3",{attrs:{id:"d-null-and-positive-integer"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#d-null-and-positive-integer"}},[t._v("#")]),t._v(" d) Null and positive integer")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[t._v("Operation")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("Result")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("null > 1")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("false")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("null < 1")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("true")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("null >= 1")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("false")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("null <= 1")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("true")])])])]),t._v(" "),a("h3",{attrs:{id:"e-negative-integer-and-null"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#e-negative-integer-and-null"}},[t._v("#")]),t._v(" e) Negative integer and null")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[t._v("Operation")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("Result")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("-1 > null")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("false")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("-1 < null")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("true")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("-1 >= null")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("false")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("-1 <= null")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("true")])])])]),t._v(" "),a("h3",{attrs:{id:"f-0-and-null"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#f-0-and-null"}},[t._v("#")]),t._v(" f) 0 and null")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[t._v("Operation")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("Result")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("0 > null")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("false")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("0 < null")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("false")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("0 >= null")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("true")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("0 <= null")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("true")])])])]),t._v(" "),a("h3",{attrs:{id:"g-0-and-false"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#g-0-and-false"}},[t._v("#")]),t._v(" g) 0 and false")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[t._v("Operation")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("Result")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("0 > false")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("false")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("0 < false")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("true")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("0 >= false")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("false")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("0 <= false")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("true")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("0 = false")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("false")])])])]),t._v(" "),a("h3",{attrs:{id:"h-positive-integer-and-true"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#h-positive-integer-and-true"}},[t._v("#")]),t._v(" h) Positive integer and true")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[t._v("Operation")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("Result")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("1 > true")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("false")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("1 < true")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("true")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("1 >= true")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("false")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("1 <= true")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("true")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("1 = true")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("false")])])])]),t._v(" "),a("h2",{attrs:{id:"comparing-strings"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#comparing-strings"}},[t._v("#")]),t._v(" Comparing strings")]),t._v(" "),a("p",[t._v("By default, HyperFormula is case and accent insensitive. It means\nit will ignore upper and lower-case letters and accents during the\ncomparison. For example, if you compare 'AsTrOnAuT' with "),a("code",[t._v("aStroNaut")]),t._v("\nthey will be understood as identical, the same goes for 'Préservation'\nand 'Preservation'. It applies to comparison operators only. It can be\nconfigured with "),a("code",[t._v("accentSensitive")]),t._v(" and "),a("code",[t._v("caseSensitive")]),t._v(" options in the\n"),a("RouterLink",{attrs:{to:"/guide/configuration-options.html"}},[t._v("configuration")]),t._v(".")],1),t._v(" "),a("p",[t._v("Apart from accents and case sensitivity, you can also configure\n"),a("code",[t._v("caseFirst.")]),t._v(" This option defines if the upper case or lower case\nshould sort first. "),a("code",[t._v("ignorePunctuation")]),t._v("  specifies whether punctuation\nshould be ignored in string comparison. By default "),a("code",[t._v("caseFirst")]),t._v(" is set\nto 'lower' and "),a("code",[t._v("ignorePunctuation")]),t._v(" is set to "),a("code",[t._v("false")]),t._v(". For more details\nsee the official "),a("a",{attrs:{href:"../api"}},[t._v("API reference")]),t._v(" of HyperFormula.")]),t._v(" "),a("p",[t._v("Here is an example configuration that overwrites default settings:")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// this part of configuration shows options ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// related to strings only")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" options "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    caseSensitive"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    accentSensitive"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    caseFirst"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'upper'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    ignorePunctuation"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h2",{attrs:{id:"concatenation-operator"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#concatenation-operator"}},[t._v("#")]),t._v(" Concatenation operator")]),t._v(" "),a("p",[t._v("It is used to combine multiple text strings into a single value.")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[t._v("Operator")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("Meaning")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("Example")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("Description")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("&")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Concatenation")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v('"a" & "b"')]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Concatenates two arguments")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("(left and right) into one")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}}),t._v(" "),a("td",{staticStyle:{"text-align":"left"}}),t._v(" "),a("td",{staticStyle:{"text-align":"left"}})])])]),t._v(" "),a("h2",{attrs:{id:"reference-operators"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#reference-operators"}},[t._v("#")]),t._v(" Reference operators")]),t._v(" "),a("p",[t._v("The reference operators are used to perform calculations of\ncombined ranges.")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[t._v("Operator")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("Meaning")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("Example")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("Description")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v(": (colon)")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Range operator")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("A1:B1")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Makes one reference to multiple cells between the two specified references.")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v(", (comma)")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Union operator")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("A1:B1,A2:B2")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Return the intersection of multiple ranges.")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("(space)")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Intersection operator")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("A1:B1 A2:B2")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Finds the intersection of the two ranges.")])])])])])}),[],!1,null,null,null);e.default=i.exports}}]);